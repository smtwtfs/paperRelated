summ = getColSummary(covars, SPdata)
colnames(SPdata)
source("functions.R")
covars <- c('RECTIME1','AGE','GENDER','SPGNDR','ETHNIC','RACE','PNAME','SPF','SPTYPE','SP2PLY');
# 'SPFSEX','SPLSEX',
SPdata = extractSPdata(covars)
colnames(SPdata)
save(SPdata, file = 'SPdata.RDATA')
load('SPdata.RDATA')
colnames(SPdata)
covars = c('GENDER', 'SPGNDR')
summ = getColSummary(covars, SPdata)
summ
load('SPdata.RDATA')
source("functions.R")
# sex
covars = c('GENDER', 'SPGNDR')
summ = getColSummary(covars, SPdata)
summ
help(list)
covars = c("RACE", "SPRACE")
summ = getColSummary(covars, SPdata)
summ
covars = c("SPAGEO","SPAGEY")
summ = getColSummary(covars,SPdata)
summ
num = seq(28)
num
input = "SPGNDR"
num = seq(28)
egoID = sapply(num,  function (x) paste(input, x ,sep = ""))
egoID
# s
covars = c('GENDER', output)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
# s
covars = c('GENDER', output)
covars
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
colnames(spdata)
colnames(SPdata)
covars
summ = getColSummary(covars, SPdata)
summ
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
29*3432
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
# race
rstudio::viewData(SPdata)
rstudio::viewData(SPdata)
rstudio::viewData(SPdata)
rstudio::viewData(SPdata)
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
index = which(colnames(data) == covars)
index
index = which(colnames(data) == covars[i])
index
load('SPdata.RDATA')
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
# race
load('SPdata.RDATA')
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
summ
sum(summ)
29*3432
101039/29
3432831
3432*31
load('SPdata.RDATA')
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
load('SPdata.RDATA')
source("functions.R")
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(output, SPdata)
summ
sum(summ)
28*3432
index = which(colnames(data) == GENDER)
summ = summary(data[,index])
index = which(colnames(data) == "GENDER")
summ = summary(data[,index])
index = which(colnames(data) == "SPGNDR1")
summ2 = summary(data[,index])
summ2
summ1
summ
summ2
(summ2+summ)
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(output, SPdata)
summ
# race
input = "SPRACE"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c("RACE", output)
summ = getColSummary(covars, SPdata)
covars = c('GENDER', "SPGNDR1")
summ = getColSummary(output, SPdata)
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
summ
# race
input = "SPRACE"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c("RACE", "SPRACE1")
summ = getColSummary(covars, SPdata)
# race
input = "SPRACE"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c("RACE", "SPRACE1")
summ = getColSummary(covars, SPdata)
summ
# race
input = "SPRACE"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
summ = getColSummary("RACE", SPdata)
print(summ)
summ = getColSummary(output, SPdata)
print(summ)
getColSummary <- function(covars, data){
summ = NULL;
for(i in 1:length(covars)){
index = which(colnames(data) == covars[i])
if(length(index)){
if(is.null(summ)){
summ = summary(data[,index])
}else{
summ = summ + summary(data[,index])
}
#       print(paste("added:", colnames(data)[index]))
#       print(summary(data[,index]))
#       print(sum(summary(data[,index])))
}
}
return(summ)
}
extractSPdata = function(covars) {
# data.RDATA is too large to load everytime
# extract a smaller dataset SPdata is necessary.
# covars are the variables names that might be used.
# covars <- c('RECTIME1','AGE','GENDER','ETHNIC','RACE','PNAME','SPTYPE','SPFSEX','SPLSEX','SP2PLY');
data<-read.spss("C:/Users/Yue/Documents/Academic/Research/DynamicNets/US/Data/nhsls.sav",to.data.frame=TRUE,use.value.labels=TRUE)
index <- which(colnames(data) == "CASEID")
SPdata<- data.frame("CASEID" = data[,index], stringsAsFactors=FALSE)
# varTable: "posInData" is the position corresponding to the original "data",
# while "pos" is the varTable corresponding to the extrated "SPdata"
varTable = data.frame("varName" = "CASEID", "pos" = 1, "posInData" = 1, "number" = 1, stringsAsFactors = FALSE)
##########################################
### Sexual Partners over the last year
##########################################
## Does 2 things:
#  1: get related data into 'SPdata'
#  2: get the lookup table for both SPdata and data
added <- NULL;
posInSPdata = 1;
for(i in 1:length(covars)){
if (!covars[i] %in% added) {
## find columns that have the name.
index <- grep(covars[i], colnames(data))
if (length(index)){
varTable<-rbind(varTable,data.frame(varName=covars[i],pos = posInSPdata+1, posInData=index[1], number = length(index)))
for(j in 1:length(index)){
thisIndex = index[j]
SPdata[paste(colnames(data)[thisIndex], sep="")] <- data[,thisIndex]
}
posInSPdata = posInSPdata + j;
added<-c(added,covars[i])
}
}
}
return(SPdata)
}
input = "SPRACE"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
summ = getColSummary("RACE", SPdata)
print(summ)
summ = getColSummary(output, SPdata)
print(summ)
4741+2604
552+ 1245
162+477
45+67+96+154
SPdata[,which(colnames(SPdata) == "AGE")]
age = SPdata[,which(colnames(SPdata) == "AGE")]
age
age[age == 97] = -200
age[age == 98] = -200
age[age == 99] = -200
age
age = SPdata[,which(colnames(SPdata) == "AGE")]
age[age == 97] = -90
age[age == 98] = -90
age[age == 99] = -90
age
age = SPdata[,which(colnames(SPdata) == "AGE")]
age[age == 97] = -200
age[age == 98] = -200
age[age == 99] = -200
NA - 24
index = grep(input, colnames(SPdata))
index
data[,index]
input = "SPAGEO"
index = grep(input, colnames(SPdata))
data[,index]
age%*% rep(1,length(index))
output= sapply(num,  function (x) paste(input, x ,sep = ""))
rep(1,length(index))
matrix(1, length(age), length(index))
age%*% matrix(1, length(age), length(index))
aa = matrix(1, length(age), length(index))
age * aa
ab = age * aa
ab
rstudio::viewData(ab)
rstudio::viewData(ab)
matrix(1, length(age), length(index))*age
SPdata[,index]  - age
aa = SPdata[,index]  - age
rstudio::viewData(aa)
matrix(1, nrow = 1, ncol =  length(index))
matrix(1, nrow = 1, ncol =  length(index)) * age
matrix(1, nrow = 1, ncol =  length(index)) %*% age
age %*%  matrix(1, nrow = 1, ncol =  length(index))
aa = age %*%  matrix(1, nrow = 1, ncol =  length(index))
aa
rstudio::viewData(aa)
rstudio::viewData(aa)
input = "SPAGEO"
index = grep(input, colnames(SPdata))
age1 = SPdata[,index] + age %*%  matrix(1, nrow = 1, ncol =  length(index))
input = "SPAGEY"
index = grep(input, colnames(SPdata))
age2 = age %*%  matrix(1, nrow = 1, ncol =  length(index))  - SPdata[,index]
age %*%  matrix(1, nrow = 1, ncol =  length(index))
aa = SPdata[,index]
ab = age %*%  matrix(1, nrow = 1, ncol =  length(index))
ac = as.matrix(aa)
ac
help(as.matrix)
aa - ab
aa
age1 = SPdata[,index]
age1
age1
as.matrix.data.frame(age2)
ac = as.matrix.data.frame(age2)
input = "SPAGEO"
index = grep(input, colnames(SPdata))
age1 = as.matrix.data.frame(SPdata[,index])
age1 = age1 + age %*%  matrix(1, nrow = 1, ncol =  length(index))
input = "SPAGEY"
index = grep(input, colnames(SPdata))
age2 = as.matrix.data.frame(SPdata[,index])
age2 = age %*%  matrix(1, nrow = 1, ncol =  length(index)) - age2
diff = age %*%  matrix(1, nrow = 1, ncol =  length(index))
age = SPdata[,which(colnames(SPdata) == "AGE")]
age[age == 97] = -200
age[age == 98] = -200
age[age == 99] = -200
age
summary age
summary(age)
age[-age==-200]
age[-(age==-200)]
summary(age)
aage==-200)
age==-200)
age==-200
summary age
age = age[-(age==-200)]
age
summary(age)
age == -200
all(age == -200)
all(!(age == -200))
!(age == -200)
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age = age[-(age==-200)]
age
age = SPdata[,which(colnames(SPdata) == "AGE")]
age[age == 97] = -200
age[age == 98] = -200
age[age == 99] = -200
sum(age == -200)
age[age == -200]
age[-(age == -200)]
age[age != -200]
age = age[age != -200]
summary(age)
histogram(age)
hist(age)
# sex
input = "SPGNDR"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
covars = c('GENDER', output)
summ = getColSummary(covars, SPdata)
summ
# race
input = "SPRACE"
num = seq(28)
output= sapply(num,  function (x) paste(input, x ,sep = ""))
summ = getColSummary("RACE", SPdata)
print(summ)
summ = getColSummary(output, SPdata)
print(summ)
white = 2604+4741
black = 552+1245
hispanic = 447+ 162
other = 45+67+96+154
white
black
hispanic
other
save(age, file = "age.RDATA")
help(ergm.simulate)
library(ergm)
library(networkDynamic)
help(ergm.simulate)
help(simulate)
help(segm)
help(srgm)
help(ergm)
help(simulate.ergm)
help(simulate.stergm)
help(simulate.stergm)
help(simulate.ergm)
g.sim <- simulate(network(16) ~ edges + mutual, coef=c(0, 0))
summary(g.sim ~ edges + mutual)
network(matrix(400, nrow = 20))
bernl
rbern
rbernl
mat = matrix(round(runif(400, max = 1, min = -0.4)))
mat
mat = matrix(round(runif(400, max = 0.8, min = -0.4)), nrow = 20)
mat
network(mat)
summary(net)
net <- network(mat)
summary(net)
net%v%"race" = c("W","W", "B", "H", "O");
summary(net)
n = 5;
# random network object:
mat = matrix(round(runif(n^2, max = 0.8, min = -0.4)), nrow = n)
net <- network(mat)
# adding attributes:
net%v%"race" = c("W","W", "B", "H", "O");
summary(net)
+ triangle + absdiff("atomic type"))
ergm(net ~ edges + kstar(2:3) + triangle
+ nodematch("atomic type", diff=TRUE)
+ triangle + absdiff("atomic type"))
n = 5;
# random network object:
mat = matrix(round(runif(n^2, max = 0.8, min = -0.4)), nrow = n, directed = FALSE)
net <- network(mat)
# adding attributes:
net%v%"race" = c("W","W", "B", "H", "O");
ergm(net ~ edges + kstar(2:3) + triangle
+ nodematch("atomic type", diff=TRUE)
+ triangle + absdiff("atomic type"))
# random network object:
mat = matrix(round(runif(n^2, max = 0.8, min = -0.4)), nrow = n)
net <- network(mat, directed = FALSE)
# adding attributes:
net%v%"race" = c("W","W", "B", "H", "O");
ergm(net ~ edges + kstar(2:3) + triangle
+ nodematch("atomic type", diff=TRUE)
+ triangle + absdiff("atomic type"))
n = 5;
# random network object:
mat = matrix(round(runif(n^2, max = 0.8, min = -0.4)), nrow = n)
net <- network(mat, directed = FALSE)
# adding attributes:
net%v%"race" = c("W","W", "B", "H", "O")
net%v%"gender" = c("F", "M", "F", "F", "M")
ergm(net ~ edges + kstar(2:3) + triangle
+ nodematch("race", diff=TRUE)
+ triangle + absdiff("atomic type"))
n = 5;
# random network object:
mat = matrix(round(runif(n^2, max = 0.8, min = -0.4)), nrow = n)
net <- network(mat, directed = FALSE)
# adding attributes:
net%v%"race" = c("W","W", "B", "H", "O")
net%v%"gender" = c("F", "M", "F", "F", "M")
ergm(net ~ edges + kstar(2:3) + triangle
+ nodematch("race", diff=TRUE)
+ triangle + absdiff("race"))
g.sim <- simulate(~edges+kstar(2), nsim=3, coef=c(-1.8,0.03),
basis=net, control=control.simulate(
MCMC.burnin=100000,
MCMC.interval=1000))
summary(g.sim)
g.sim[1]
g.sim <- simulate(~edges+kstar(2), coef=c(-1.8,0.03),
basis=net, control=control.simulate(
MCMC.burnin=100000,
MCMC.interval=1000))
stergm.simulate
simulate.stergm
simulate.network
install.packages(tergm)
install.packages("tergm")
install.packages("tergm")
library(tergm)
simulate.stergm
?simulate.stergm
?stergm
